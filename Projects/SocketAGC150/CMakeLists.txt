# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

# Project name
project(SocketAGC150)

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

set(CONFIGURATION_NAME "Debug")

set(CL_WORKSPACE_DIRECTORY ../../../smdsolution)
# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/${CL_WORKSPACE_DIRECTORY}/cmake-build-${CONFIGURATION_NAME}/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

# Projects


# Top project
# Define some variables
set(PROJECT_SocketAGC150_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/../../../smdsolution")



#{{{{ User Code 1
# Place your code here
IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "Arm")
    include_directories(/data/crosscompile/rootfs-dev2/usr/include)
    set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../../cmake-build-Arm-Debug/output)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "ArmA7")
    set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../../cmake-build-Arm-A7-Debug/output)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
            add_definitions(
    -DSMDDEVICE
)
ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "ArmNUC")
    set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../../cmake-build-Arm-NUC-Debug/output)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
            add_definitions(
    -DSMDDEVICE
)
ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "ArmA8")
    set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../../cmake-build-Arm-A8-Debug/output)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    add_definitions(
    -DSMDDEVICE
)
ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "ArmZNV")
    set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../../cmake-build-Arm-ZNV-Debug/output)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
            add_definitions(
    -DSMDDEVICE
)
ELSE()
    include_directories(${WORKSPACE_PATH}/devroot/usr/include    ${WORKSPACE_PATH}/devroot/usr/include/bsoncxx/v_noabi    ${WORKSPACE_PATH}/devroot/usr/include/mongocxx/v_noabi)
ENDIF()
#}}}}

include_directories(
    .
    ..
    ../../include
    ../../interface

)


# Compiler options
add_definitions(-std=c++14)
add_definitions(-Wall)
add_definitions(-Wno-unknown-pragmas)
add_definitions(-Wno-reorder)
add_definitions(-Wno-switch)
add_definitions(-Wno-deprecated-declarations)
add_definitions(-g)
add_definitions(-O0)
add_definitions(
    -DUSE_SEPERATE_DRIVER
)


# Linker options


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
link_directories(
    .
)

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/SocketAGC150.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -std=c++14 -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-switch -Wno-deprecated-declarations")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_executable(SocketAGC150 ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(SocketAGC150 ${LINK_OPTIONS})



#{{{{ User Code 3
# Place your code here
set_target_properties(SocketAGC150 PROPERTIES PREFIX "")
set_target_properties(SocketAGC150 PROPERTIES OUTPUT_NAME "socketagc150")
#}}}}

