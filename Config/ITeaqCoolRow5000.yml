Project:
  Name : ITeaqCoolRow5000
  RT_ID : 5156
  File : "艾特网能Cool Row5000(金戈)变频 Modbus 监控协议V1.3（精密空调）.pdf"
Sample : 
  - Cmd : 3
    Offset : 0
    Len : 33
    Type : "s"
    Data : 
      - Name : "回风温度测量值"
        Unit : "℃"
        Offset : 1
        Ratio : 10
        
      - Name : "回风湿度测量值"
        Unit : "%"
        Offset : 2
        Ratio : 10
      - Name : "送风温度1测量值"
        Unit : "℃"
        Offset : 3
        Ratio : 10
      - Name : "送风温度2测量值"
        Unit : "℃"
        Offset : 4
        Ratio : 10
      - Name : "排气压力"
        Unit : "Bar"
        Offset : 5
        Ratio : 10
      - Name : "吸气压力"
        Unit : "Bar"
        Offset : 6
        Ratio : 10
      - Name : "排气温度"
        Unit : "℃"
        Offset : 7
        Ratio : 10
      - Name : "吸气温度"
        Unit : "℃"
        Offset : 8
        Ratio : 10
      - Name : "机组运行状态"
        Offset : 13
        Options :
          - Key : 0
            Value : 本地关机
          - Key : 1
            Value : 远程关机
          - Key : 2
            Value : 待机
          - Key : 3
            Value : 监控关机
          - Key : 4
            Value : 电源保护
          - Key : 5
            Value : 气流保护
          - Key : 6
            Value : 压机保护
          - Key : 7
            Value : 系统开机
      - Name : "送风温度设定点"
        Offset : 30
        Ratio : 10
        Unit : "℃"
      - Name : "回风温度设定点"
        Offset : 31
        Ratio : 10
        Unit : "℃"
      - Name : "远程温度设定点"
        Offset : 32
        Ratio : 10
        Unit : "℃"
      - Name : "湿度设定点"
        Offset : 33
        Ratio : 10
        Unit : "℃"
SET_AO_CODE: |
  if(setting["signal_id"].asString() == "150800310010") {
      if(setting["SetValue"] != Json::nullValue && setting["SetValue"].type()  != Json::nullValue) {
          int16_t newValue = atoi(setting["SetValue"].asString().c_str())*10;
          //送风温度
          state = AC_Control_Code::AC_SET_TEMPERATURE;
          cmd_result_ = -1;
          OpenPort();
          modbus_write_register(29, newValue);
          if((uint32_t)outBufferSize >= sizeof(int)) {
              *((int*)outBuffer) = 1;//通知取状态
              bytesReturned = sizeof(int);
          }                       
      }
  }else if(setting["signal_id"].asString() == "150800340010") {
      if(setting["SetValue"] != Json::nullValue && setting["SetValue"].type()  != Json::nullValue) {
          int16_t newValue = atoi(setting["SetValue"].asString().c_str())*10;
          //湿度
          state = AC_Control_Code::AC_SET_HUMID;
          cmd_result_ = -1;
          OpenPort();
          modbus_write_register(32, newValue);
          if((uint32_t)outBufferSize >= sizeof(int)) {
              *((int*)outBuffer) = 1;//通知取状态
              bytesReturned = sizeof(int);
          }                       
      }
  }

SET_DO_CODE : |
  if(setting["signal_id"].asString() == "140800280010") {
      //开机
      state = AC_Control_Code::AC_START;
      cmd_result_ = -1;
      last_data_ = 0;
      modbus_write_register(33, 0);
      if((uint32_t)outBufferSize >= sizeof(int)) {
          *((int*)outBuffer) = 1;//通知取状态
          bytesReturned = sizeof(int);
      }
  }else if(setting["signal_id"].asString() == "140800300010") {
      //关机
      state = AC_Control_Code::AC_STOP;
      cmd_result_ = -1;
      last_data_ = 0xFF00;
      modbus_write_register(33, 0xFF00);
      if((uint32_t)outBufferSize >= sizeof(int)) {
          *((int*)outBuffer) = 1;//通知取状态
          bytesReturned = sizeof(int);
      }
  }

SET_RET_CODE: |
  case AC_Control_Code::AC_START: {
        if(tab_reg[0] == 1) {
            cmd_result_ = 1;
        } else {
            cmd_result_ = 3;
        }
        Reset();
        return false;
      }
      case AC_Control_Code::AC_STOP: {
        if(tab_reg[0] == 0) {
            cmd_result_ = 1;
        } else {
            cmd_result_ = 3;
        }
        Reset();
        return false;
      } 
      case AC_Control_Code::AC_SET_TEMPERATURE:
      case AC_Control_Code::AC_SET_HUMID: {
        if(tab_reg[0] == last_data_) {
            cmd_result_ = 1;
        } else {
            cmd_result_ = 3;
        }
        Reset();
        return false;
      }
